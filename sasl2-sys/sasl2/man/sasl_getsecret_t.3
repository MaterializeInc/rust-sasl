.\" Man page generated from reStructuredText.
.
.TH "SASL_GETSECRET_T" "3" "February 18, 2022" "2.1.28" "Cyrus SASL"
.SH NAME
sasl_getsecret_t \- Cyrus SASL documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
.nf
#include <sasl/sasl.h>

int sasl_getsecret_t(sasl_conn_t *conn,
                    void *context,
                    int id,
                    sasl_secret_t ** psecret);
.fi
.SH DESCRIPTION
.INDENT 0.0
.TP
.B int sasl_getsecret_t(sasl_conn_t *conn,
.TP
.B void *context,
.TP
.B int id,
.TP
.B sasl_secret_t ** psecret);
\fBsasl_getsecret_t()\fP is used to retrieve the secret  from  the
application. A sasl_secret_t should be allocated to length
\fIsizeof(sasl_secret_t) + <length of secret>\fP\&.  It  has two
fields: \fIlen\fP which is the length of the secret in bytes and
\fIdata\fP which contains the secret itself (does not need to be
null terminated).
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBconn\fP â€“ is the SASL connection context
.UNINDENT
.UNINDENT
.UNINDENT
.SH RETURN VALUE
.sp
SASL  callback  functions should return SASL return codes.
See sasl.h for a complete list. \fBSASL_OK\fP indicates success.
.sp
Other return codes indicate errors and should be handled.
.SH SEE ALSO
.sp
\fI\%RFC 4422\fP,:saslman:\fIsasl(3)\fP, sasl_callbacks(3)
.SH AUTHOR
The Cyrus Team
.SH COPYRIGHT
1993-2016, The Cyrus Team
.\" Generated by docutils manpage writer.
.
