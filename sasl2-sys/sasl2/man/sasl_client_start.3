.\" Man page generated from reStructuredText.
.
.TH "SASL_CLIENT_START" "3" "February 18, 2022" "2.1.28" "Cyrus SASL"
.SH NAME
sasl_client_start \- Cyrus SASL documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
.nf
#include <sasl/sasl.h>

int sasl_client_start(sasl_conn_t * conn,
        const char * mechlist,
        sasl_interact_t ** prompt_need,
        const char ** clientout,
        unsigned * clientoutlen,
        const char ** mech);
.fi
.SH DESCRIPTION
.INDENT 0.0
.TP
.B int sasl_client_start(sasl_conn_t * conn,
.TP
.B const char * mechlist,
.TP
.B sasl_interact_t ** prompt_need,
.TP
.B const char ** clientout,
.TP
.B unsigned * clientoutlen,
.TP
.B const char ** mech);
\fBsasl_client_start()\fP selects a mechanism for authentication and starts the
authentication session. The mechlist is the list of mechanisms the client
might like to use. The mech‐ anisms in the list are not necessarily  supported
by  the client  or  even  valid. SASL determines which of these to use based
upon the security preferences specified earlier. The  list  of mechanisms is
typically a list of mechanisms the server supports acquired from a capability
request.
.sp
If \fBSASL_INTERACT\fP is returned the library needs some values to  be
filled  in  before it can proceed. The \fIprompt_need\fP structure will be filled in
with requests. The application should  fulfill  these requests and call
sasl_client_start again with identical parameters (the \fIprompt_need\fP parameter
will  be  the  same pointer as before but filled in by the application).
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBconn\fP – is the SASL connection context
.IP \(bu 2
\fBmechlist\fP – is a list of mechanisms the server has available.
Punctuation is ignored.
.IP \(bu 2
\fBprompt_need\fP – is filled in with a list of prompts needed to
continue (if necessary).
.IP \(bu 2
\fBclientout\fP – 
.sp
is created. It is  the  initial
client  response  to  send to the server. It is the job of
the client to send it over the network to the server.  Any
protocol  specific encoding (such as base64 encoding) necessary
needs to be done by the client.
.sp
If the protocol lacks client‐send‐first  capability,  then
set clientout to NULL.
.sp
If  there  is no initial client‐send, then *clientout will
be set to NULL on return.

.IP \(bu 2
\fBclientoutlen\fP – length of \fIclientout\fP\&.
.IP \(bu 2
\fBmech\fP – contains the name of the chosen  SASL
mechanism  (on success)
.UNINDENT
.UNINDENT
.UNINDENT
.SH RETURN VALUE
.sp
SASL  callback  functions should return SASL return codes.
See sasl.h for a complete list. \fBSASL_CONTINUE\fP indicates success
and that there are more steps needed in the authentication.
.sp
Other return codes indicate errors and should either be handled or the authentication
session should be quit.
.SH SEE ALSO
.sp
\fI\%RFC 4422\fP,:saslman:\fIsasl(3)\fP, sasl_callbacks(3),
sasl_client_init(3), sasl_client_new(3),
sasl_client_step(3), sasl_errors(3)
.SH AUTHOR
The Cyrus Team
.SH COPYRIGHT
1993-2016, The Cyrus Team
.\" Generated by docutils manpage writer.
.
