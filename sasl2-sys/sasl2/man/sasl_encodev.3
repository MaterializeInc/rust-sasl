.\" Man page generated from reStructuredText.
.
.TH "SASL_ENCODEV" "3" "February 18, 2022" "2.1.28" "Cyrus SASL"
.SH NAME
sasl_encodev \- Cyrus SASL documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
.nf
#include <sasl/sasl.h>

int sasl_encode(sasl_conn_t *conn,
                const char * input,
                unsigned inputlen,
                const char ** output,
                unsigned * outputlen);

int sasl_encodev(sasl_conn_t *conn,
                const struct iovec * invec,
                unsigned numiov,
                const char ** output,
                unsigned * outputlen);
.fi
.SH DESCRIPTION
.sp
\fBsasl_encode\fP encodes data to be sent to be sent to a remote host  who  we’ve
had  a successful authentication session with. If there  is  a  negotiated
security  the  data  in signed/encrypted  and  the  output  should be sent
without modification to the remote host. If there is  no  security layer the
output is identical to the input.
.sp
\fBsasl_encodev\fP does the same, but for a \fIstruct iovec\fP instead
of a character buffer.
.INDENT 0.0
.TP
.B int sasl_encode(sasl_conn_t *conn,
.TP
.B const char * input,
.TP
.B unsigned inputlen,
.TP
.B const char ** output,
.TP
.B unsigned * outputlen);
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBconn\fP – is the SASL connection context
.IP \(bu 2
\fBoutput\fP – contains the decoded data and is allocated/freed by
the library.
.IP \(bu 2
\fBoutputlen\fP – length of \fIoutput\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B int sasl_encodev(sasl_conn_t *conn,
.TP
.B const struct iovec * invec,
.TP
.B unsigned numiov,
.TP
.B const char ** output,
.TP
.B unsigned * outputlen);
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBconn\fP – is the SASL connection context
.IP \(bu 2
\fBoutput\fP – contains the decoded data and is allocated/freed by
the library.
.IP \(bu 2
\fBoutputlen\fP – length of \fIoutput\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.SH RETURN VALUE
.sp
SASL  callback  functions should return SASL return codes.
See sasl.h for a complete list. \fBSASL_OK\fP indicates success.
.sp
Other return codes indicate errors and should be handled.
.SH SEE ALSO
.sp
\fI\%RFC 4422\fP,:saslman:\fIsasl(3)\fP, sasl_decode(3),
sasl_errors(3)
.SH AUTHOR
The Cyrus Team
.SH COPYRIGHT
1993-2016, The Cyrus Team
.\" Generated by docutils manpage writer.
.
