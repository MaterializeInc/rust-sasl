.\" Man page generated from reStructuredText.
.
.TH "SASL_SERVER_USERDB_SETPASS_T" "3" "February 18, 2022" "2.1.28" "Cyrus SASL"
.SH NAME
sasl_server_userdb_setpass_t \- Cyrus SASL documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
.nf
#include <sasl/sasl.h>

int sasl_server_userdb_setpass_t(sasl_conn_t *conn,
                                 void *context,
                                 const char *user,
                                 const char *pass,
                                 unsigned passlen,
                                 struct propctx *propctx,
                                 unsigned flags)
.fi
.SH DESCRIPTION
.INDENT 0.0
.TP
.B int sasl_server_userdb_setpass_t(sasl_conn_t *conn,
.TP
.B void *context,
.TP
.B const char *user,
.TP
.B const char *pass,
.TP
.B unsigned passlen,
.TP
.B struct propctx *propctx,
.TP
.B unsigned flags)
\fBsasl_server_userdb_setpass_t\fP is used to store or change  a plaintext
password  in the callback‐supplier’s user database.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBconn\fP – is the SASL connection
.IP \(bu 2
\fBcontext\fP – context from the callback record
.IP \(bu 2
\fBuser\fP – NUL terminated user name with \fIuser@realm\fP syntax
.IP \(bu 2
\fBpass\fP – password to check (may not be NUL terminated)
.IP \(bu 2
\fBpasslen\fP – length of the password
.IP \(bu 2
\fBpropctx\fP – Auxilliary Properties (not stored)
.IP \(bu 2
\fBflags\fP – These  are  the  same  flags  that  are  passed  to
sasl_setpass(3), and are documented on that man page.
.UNINDENT
.UNINDENT
.UNINDENT
.SH RETURN VALUE
.sp
SASL  callback  functions should return SASL return codes.
See sasl.h for a complete list. \fBSASL_OK\fP indicates success.
.sp
Other return codes indicate errors and should be handled.
.SH SEE ALSO
.sp
\fI\%RFC 4422\fP,:saslman:\fIsasl(3)\fP, sasl_errors(3)
sasl_callbacks(3), sasl_server_userdb_checkpass_t(3),
sasl_setpass(3)
.SH AUTHOR
The Cyrus Team
.SH COPYRIGHT
1993-2016, The Cyrus Team
.\" Generated by docutils manpage writer.
.
