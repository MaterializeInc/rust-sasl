.\" Man page generated from reStructuredText.
.
.TH "SASL_SERVER_START" "3" "February 18, 2022" "2.1.28" "Cyrus SASL"
.SH NAME
sasl_server_start \- Cyrus SASL documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
.nf
#include <sasl/sasl.h>

int sasl_server_start(sasl_conn_t * conn,
             const char * mech,
             const char * clientin,
             unsigned clientinlen,
             const char ** serverout,
             unsigned * serveroutlen);
.fi
.SH DESCRIPTION
.INDENT 0.0
.TP
.B int sasl_server_start(sasl_conn_t * conn,
.TP
.B const char * mech,
.TP
.B const char * clientin,
.TP
.B unsigned * clientinlen,
.TP
.B const char ** serverout,
.TP
.B unsigned * serveroutlen);
\fBsasl_server_start()\fP begins  the  authentication  with the
mechanism specified with mech. This fails if the mechanism
is  not  supported.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBconn\fP – is the SASL connection context
.IP \(bu 2
\fBmech\fP – is the mechanism name that the client requested
.IP \(bu 2
\fBclientin\fP – is the client initial response, NULL if the protocol
lacks support for client‐send‐first or if the  other
end  did  not  have an initial send.  Note that no initial
client send is distinct from an initial  send  of  a  null
string, and the protocol MUST account for this difference.
.IP \(bu 2
\fBclientinlen\fP – is the length of initial response
.IP \(bu 2
\fBserverout\fP – is created by the plugin library. It is the initial
server response to send to the client. This is  allocated/freed by the
library and it is the job of the client
to send it over the network to the server.  Also  protocol
specific  encoding (such as base64 encoding) must needs to
be done by the server.
.IP \(bu 2
\fBserveroutlen\fP – is set to the length of initial server challenge
.UNINDENT
.UNINDENT
.UNINDENT
.SH RETURN VALUE
.sp
SASL  callback  functions should return SASL return codes. See sasl.h for a
complete list. \fBSASL_OK\fP is returned if the authentication is complete
and the user is authenticated.  \fBSASL_CONTINUE\fP  is returned if one or
more steps are still required in the authentication.
.sp
All other return values indicate errors and should be handled or the
authentication session should be quit.
.SH SEE ALSO
.sp
\fI\%RFC 4422\fP,:saslman:\fIsasl(3)\fP,
sasl_server_init(3), sasl_server_new(3),
sasl_server_step(3), sasl_errors(3)
.SH AUTHOR
The Cyrus Team
.SH COPYRIGHT
1993-2016, The Cyrus Team
.\" Generated by docutils manpage writer.
.
