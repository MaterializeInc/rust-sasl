From 16d5c1312bcf0ab7779fc50746e52d8a96142577 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 03:10:19 +0200
Subject: [PATCH 01/16] windows build: restore md5global.h

See https://github.com/cyrusimap/cyrus-sasl/pull/664

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 win32/include/md5global.h | 38 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)
 create mode 100644 win32/include/md5global.h

diff --git a/win32/include/md5global.h b/win32/include/md5global.h
new file mode 100644
index 00000000..42af9a2e
--- /dev/null
+++ b/win32/include/md5global.h
@@ -0,0 +1,38 @@
+/* GLOBAL.H - RSAREF types and constants
+ */
+#ifndef MD5GLOBAL_H
+#define MD5GLOBAL_H
+
+/* PROTOTYPES should be set to one if and only if the compiler supports
+  function argument prototyping.
+The following makes PROTOTYPES default to 0 if it has not already
+  been defined with C compiler flags.
+ */
+#ifndef PROTOTYPES
+#define PROTOTYPES 0
+#endif
+
+/* POINTER defines a generic pointer type */
+typedef unsigned char *POINTER;
+
+typedef signed char INT1;		/*  8 bits */
+typedef short INT2;			/* 16 bits */
+typedef int INT4;			/* 32 bits */
+/* There is no 64 bit type */
+typedef unsigned char UINT1;		/*  8 bits */
+typedef unsigned short UINT2;		/* 16 bits */
+typedef unsigned int UINT4;		/* 32 bits */
+/* There is no 64 bit type */
+
+/* PROTO_LIST is defined depending on how PROTOTYPES is defined above.
+If using PROTOTYPES, then PROTO_LIST returns the list, otherwise it
+returns an empty list.
+*/
+#if PROTOTYPES
+#define PROTO_LIST(list) list
+#else
+#define PROTO_LIST(list) ()
+#endif
+
+#endif /* MD5GLOBAL_H */
+

From adab81f8523a1f6c85d7ec2dcf76241cfc5016b4 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:38:12 +0300
Subject: [PATCH 02/16] windows build: delete unused '_sources' variables

These make the impression that changing them could have some effect.
In fact, this commit is already a victim of this:
  b179dc6e by Partha Susarla, 2017-07-25 06:14:40
  Move plugin_common.[ch] to a common subdir.

There, a rule for 'plugin_common.h' was added and it looked good because
'plugin_common.h' is listed in 'common_sources', but this in fact does
nothing and the added rule didn't do its job.

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 lib/NTMakefile     |  2 --
 plugins/NTMakefile | 17 -----------------
 sample/NTMakefile  | 12 +++---------
 3 files changed, 3 insertions(+), 28 deletions(-)

diff --git a/lib/NTMakefile b/lib/NTMakefile
index ff982eb1..f8cf8054 100755
--- a/lib/NTMakefile
+++ b/lib/NTMakefile
@@ -4,12 +4,10 @@
 # emulation on Windows, so there is no need to build getaddrinfo.c
 
 !IF "$(VCVER)" == "6"
-compat_sources = getaddrinfo.c getnameinfo.c
 compat_objs = getaddrinfo.obj getnameinfo.obj
 !ENDIF
 
 
-libsasl_sources = auxprop.c canonusr.c checkpw.c client.c common.c config.c external.c md5.c saslutil.c server.c seterror.c windlopen.c getsubopt.c plugin_common.c plugin_common.h $(compat_sources)
 libsasl_objs = auxprop.obj canonusr.obj checkpw.obj client.obj common.obj config.obj external.obj md5.obj saslutil.obj server.obj seterror.obj windlopen.obj getsubopt.obj plugin_common.obj $(compat_objs)
 libsasl_res = libsasl.res
 libsasl_out = libsasl.dll libsasl.exp libsasl.lib $(libsasl_res)
diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index 65767617..77e9d689 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -57,59 +57,45 @@ generated_rc=saslANONYMOUS.rc saslPLAIN.rc saslCRAMMD5.rc saslDIGESTMD5.rc saslL
 # emulation on Windows, so there is no need to build getaddrinfo.c
 
 !IF "$(VCVER)" == "6"
-compat_sources = getaddrinfo.c getnameinfo.c
 compat_objs = getaddrinfo.obj getnameinfo.obj
 !ENDIF
 
-common_sources = plugin_common.c plugin_common.h
 common_objs = plugin_common.obj $(compat_objs)
 
-saslANONYMOUS_sources = anonymous.c anonymous_init.c $(common_sources)
 saslANONYMOUS_objs = anonymous.obj anonymous_init.obj $(common_objs)
 saslANONYMOUS_out = saslANONYMOUS.dll saslANONYMOUS.exp saslANONYMOUS.lib
 
-saslPLAIN_sources = plain.c plain_init.c $(common_sources)
 saslPLAIN_objs = plain.obj plain_init.obj $(common_objs)
 saslPLAIN_out = saslPLAIN.dll saslPLAIN.exp saslPLAIN.lib
 
-saslCRAMMD5_sources = cram.c crammd5_init.c $(common_sources)
 saslCRAMMD5_objs = cram.obj crammd5_init.obj $(common_objs)
 saslCRAMMD5_out = saslCRAMMD5.dll saslCRAMMD5.exp saslCRAMMD5.lib
 
-saslDIGESTMD5_sources = digestmd5.c digestmd5_init.c $(common_sources)
 saslDIGESTMD5_objs = digestmd5.obj digestmd5_init.obj $(common_objs)
 saslDIGESTMD5_out = saslDIGESTMD5.dll saslDIGESTMD5.exp saslDIGESTMD5.lib
 
-saslLOGIN_sources = login.c login_init.c $(common_sources)
 saslLOGIN_objs = login.obj login_init.obj $(common_objs)
 saslLOGIN_out = saslLOGIN.dll saslLOGIN.exp saslLOGIN.lib
 
-saslSCRAM_sources = scram.c scram_init.c $(common_sources)
 saslSCRAM_objs = scram.obj scram_init.obj $(common_objs)
 saslSCRAM_out = saslSCRAM.dll saslSCRAM.exp saslSCRAM.lib
 
-saslNTLM_sources = ntlm.c ntlm_init.c $(common_sources)
 saslNTLM_objs = ntlm.obj ntlm_init.obj $(common_objs)
 saslNTLM_out = saslNTLM.dll saslNTLM.exp saslNTLM.lib
 
-saslGSSAPI_sources = gssapi.c gssapiv2_init.c $(common_sources)
 saslGSSAPI_objs = gssapi.obj gssapiv2_init.obj $(common_objs)
 saslGSSAPI_out = saslGSSAPI.dll saslGSSAPI.exp saslGSSAPI.lib
 
-saslSRP_sources = srp.c srp_init.c $(common_sources)
 saslSRP_objs = srp.obj srp_init.obj $(common_objs)
 saslSRP_out = saslSRP.dll saslSRP.exp saslSRP.lib
 
-saslOTP_sources = otp.c otp_init.c $(common_sources)
 saslOTP_objs = otp.obj otp_init.obj $(common_objs)
 saslOTP_out = saslOTP.dll saslOTP.exp saslOTP.lib
 
-saslSQL_sources = sql.c sql_init.c $(common_sources)
 saslSQL_objs = sql.obj sql_init.obj $(common_objs)
 # saslSQL_out is an agregation of all generated files for all SQL plugins
 saslSQL_out = saslSQLITE.dll saslSQLITE.exp saslSQLITE.lib
 
-saslLDAPDB_sources = ldapdb.c $(common_sources)
 saslLDAPDB_objs = ldapdb.obj $(common_objs)
 saslLDAPDB_out = saslLDAPDB.dll saslLDAPDB.exp saslLDAPDB.lib
 
@@ -138,13 +124,11 @@ GSS_LIBS=
 DB_LIBS=/libpath:$(LMDB_LIBPATH) lmdb.lib
 
 # Auxprop Plugin
-libsasldb_sources = allockey.c db_lmdb.c
 libsasldb_objs = allockey.obj db_lmdb.obj
 !ELSE
 DB_LIBS=/libpath:$(DB_LIBPATH) $(DB_LIB)
 
 # Auxprop Plugin
-libsasldb_sources = allockey.c db_berkeley.c
 libsasldb_objs = allockey.obj db_berkeley.obj
 !ENDIF
 
@@ -154,7 +138,6 @@ DIGEST_FLAGS=/D "WITH_RC4" /DOBSOLETE_DIGEST_ATTR=1
 
 SCRAM_FLAGS=/DHAVE_SHA512=1
 
-saslSASLDB_sources = sasldb.c sasldb_init.c $(libsasldb_sources) $(common_sources)
 saslSASLDB_objs = sasldb.obj sasldb_init.obj $(libsasldb_objs) $(common_objs)
 saslSASLDB_out = saslSASLDB.dll saslSASLDB.exp saslSASLDB.lib
 
diff --git a/sample/NTMakefile b/sample/NTMakefile
index 62c38bc3..8922fc9b 100644
--- a/sample/NTMakefile
+++ b/sample/NTMakefile
@@ -4,12 +4,6 @@
 sample_apps=sample-client.exe sample-server.exe
 sample_out=sample-client.pdb sample-server.pdb client.pdb server.pdb
 
-server_SOURCES = server.c common.c common.h
-client_SOURCES = client.c common.c common.h
-compat_sources = getaddrinfo.c getnameinfo.c
-sample_client_SOURCES = sample-client.c
-sample_server_SOURCES = sample-server.c
-
 common_objs = common.obj
 server_objs = server.obj
 client_objs = client.obj
@@ -19,7 +13,7 @@ sample_server_objs = sample-server.obj
 
 !IF $(TARGET_WIN_SYSTEM) < 51
 common_objs = $(common_objs) $(compat_objs)
-!ENDIF 
+!ENDIF
 
 all_objs = $(common_objs) $(server_objs) $(client_objs) $(sample_client_objs) $(sample_server_objs)
 all_out = $(sample_apps) $(sample_out)
@@ -30,7 +24,7 @@ CPPFLAGS = $(CPPFLAGS) /DNEED_GETOPT
 
 !IF $(TARGET_WIN_SYSTEM) >= 51
 CPPFLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(CPPFLAGS)
-!ENDIF 
+!ENDIF
 
 SASL_LIB=/libpath:"..\lib" libsasl.lib
 
@@ -94,7 +88,7 @@ CLEAN :
 
 .c.obj::
    $(CPP) @<<
-   $(CPP_PROJ) $< 
+   $(CPP_PROJ) $<
 <<
 
 .cpp.obj::

From bbf8327111ba46a8512a0964700c7e07ef301971 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:38:24 +0300
Subject: [PATCH 03/16] windows build: drop rules for non-existing .cpp and
 .cxx files

This is done in preparation for another commit that fixes things.

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 lib/NTMakefile     | 10 ----------
 plugins/NTMakefile | 10 ----------
 sample/NTMakefile  | 10 ----------
 utils/NTMakefile   | 10 ----------
 4 files changed, 40 deletions(-)

diff --git a/lib/NTMakefile b/lib/NTMakefile
index f8cf8054..6e85b557 100755
--- a/lib/NTMakefile
+++ b/lib/NTMakefile
@@ -114,13 +114,3 @@ END
    $(CPP) @<<
    $(CPP_PROJ) $< 
 <<
-
-.cpp.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cxx.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index 77e9d689..bf958d11 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -286,16 +286,6 @@ CLEAN :
    $(CPP_PROJ) $< 
 <<
 
-.cpp.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cxx.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
 .rc.res:
 	rc $<
 
diff --git a/sample/NTMakefile b/sample/NTMakefile
index 8922fc9b..9d9d6b3d 100644
--- a/sample/NTMakefile
+++ b/sample/NTMakefile
@@ -90,13 +90,3 @@ CLEAN :
    $(CPP) @<<
    $(CPP_PROJ) $<
 <<
-
-.cpp.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cxx.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
diff --git a/utils/NTMakefile b/utils/NTMakefile
index 1d0a0fa7..ebd65441 100644
--- a/utils/NTMakefile
+++ b/utils/NTMakefile
@@ -76,13 +76,3 @@ CLEAN :
    $(CPP) @<<
    $(CPP_PROJ) $< 
 <<
-
-.cpp.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cxx.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<

From 7a49a90a7be1d54a8e336e7a462865bc65a17642 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:38:39 +0300
Subject: [PATCH 04/16] windows build: fix build error related to
 'plugin_common.h'

This fixes build errors like:
  anonymous.c
  anonymous.c(55) : fatal error C1083: Cannot open include file: 'plugin_common.h': No such file or directory
  anonymous_init.c
  anonymous_init.c(17) : fatal error C1083: Cannot open include file: 'plugin_common.h': No such file or directory
  plugin_common.c
  plugin_common.c(74) : fatal error C1083: Cannot open include file: 'plugin_common.h': No such file or directory

The problem was that rule for 'plugin_common.h' was never executed because
it's not a dependency of anything. While at it, get rid of file copying.
Instead, search for sources in other directories.

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 plugins/NTMakefile | 38 ++++++++++++++++----------------------
 1 file changed, 16 insertions(+), 22 deletions(-)

diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index bf958d11..423059c7 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -152,7 +152,7 @@ EXTRA_FLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(EXTRA_FLAGS)
 !ENDIF
 
 EXTRA_FLAGS=$(EXTRA_FLAGS) $(DB_FLAGS) $(OPENSSL_FLAGS) $(GSS_FLAGS) $(SRP_FLAGS) $(SQL_FLAGS) $(DIGEST_FLAGS) $(CRAM_FLAGS) $(SCRAM_FLAGS) $(LDAP_FLAGS)
-CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" $(EXTRA_FLAGS) /D "WIN32" /D "_WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
+CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" /I "..\common" $(EXTRA_FLAGS) /D "WIN32" /D "_WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
 
 OPENSSL_LIBS=/libpath:$(OPENSSL_LIBPATH) libeay32.lib ssleay32.lib
 
@@ -177,27 +177,6 @@ install: $(PLUGINS)
 
 all-recursive : $(PLUGINS)
 
-getaddrinfo.c: ..\lib\getaddrinfo.c
-	xcopy /D /Y ..\lib\getaddrinfo.c .
-
-getnameinfo.c: ..\lib\getnameinfo.c
-	xcopy /D /Y ..\lib\getnameinfo.c .
-
-plugin_common.c: ..\common\plugin_common.c
-	xcopy /D /Y ..\common\plugin_common.c .
-
-plugin_common.h: ..\common\plugin_common.h
-	xcopy /D /Y ..\common\plugin_common.h .
-
-allockey.c: ..\sasldb\allockey.c
-	xcopy /D /Y ..\sasldb\allockey.c .
-
-db_berkeley.c: ..\sasldb\db_berkeley.c
-	xcopy /D /Y ..\sasldb\db_berkeley.c .
-
-db_lmdb.c: ..\sasldb\db_lmdb.c
-	xcopy /D /Y ..\sasldb\db_lmdb.c .
-
 #Add /pdb: option?
 
 saslANONYMOUS.dll: $(saslANONYMOUS_objs) saslANONYMOUS.res
@@ -286,6 +265,21 @@ CLEAN :
    $(CPP_PROJ) $< 
 <<
 
+{..\lib}.c.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+{..\common}.c.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+{..\sasldb}.c.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
 .rc.res:
 	rc $<
 

From 0b65ab5026669e057d7eb5f93b71980523521e01 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:34:13 +0300
Subject: [PATCH 05/16] windows build: support 64-bit gssapi

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 plugins/NTMakefile | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index 423059c7..bb8155f2 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -106,8 +106,12 @@ OPENSSL_FLAGS=
 !ENDIF 
 
 !IF "$(GSSAPILIB)" == ""
+!IF EXISTS($(GSSAPI_LIBPATH)\gssapi64.lib)
+GSSAPILIB=gssapi64.lib
+!ELSE
 GSSAPILIB=gssapi32.lib
 !ENDIF
+!ENDIF
 
 !IF "$(GSSAPI)" == "CyberSafe"
 GSS_FLAGS= /I $(GSSAPI_INCLUDE) /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"

From 9772fe88d270c64b8291ceb6a6ea265a65db4c65 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:38:54 +0300
Subject: [PATCH 06/16] windows build: extract common CPPFLAGS into a new
 variable

This is done in preparation for another commit that fixes things.

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 lib/NTMakefile     | 2 +-
 plugins/NTMakefile | 2 +-
 sample/NTMakefile  | 2 +-
 utils/NTMakefile   | 2 +-
 win32/common.mak   | 1 +
 5 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/lib/NTMakefile b/lib/NTMakefile
index 6e85b557..3eb2688c 100755
--- a/lib/NTMakefile
+++ b/lib/NTMakefile
@@ -12,7 +12,7 @@ libsasl_objs = auxprop.obj canonusr.obj checkpw.obj client.obj common.obj config
 libsasl_res = libsasl.res
 libsasl_out = libsasl.dll libsasl.exp libsasl.lib $(libsasl_res)
 
-CPPFLAGS = /wd4996 /Wp64 /D NEED_GETOPT /I "..\win32\include" /I "." /I "..\include" /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "LIBSASL_EXPORTS"
+CPPFLAGS = /wd4996 /Wp64 /D NEED_GETOPT /I "..\win32\include" /I "." /I "..\include" /D "LIBSASL_EXPORTS" $(COMMON_CPPFLAGS)
 
 !IF $(TARGET_WIN_SYSTEM) >= 51
 CPPFLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(CPPFLAGS)
diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index bb8155f2..cbe20409 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -156,7 +156,7 @@ EXTRA_FLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(EXTRA_FLAGS)
 !ENDIF
 
 EXTRA_FLAGS=$(EXTRA_FLAGS) $(DB_FLAGS) $(OPENSSL_FLAGS) $(GSS_FLAGS) $(SRP_FLAGS) $(SQL_FLAGS) $(DIGEST_FLAGS) $(CRAM_FLAGS) $(SCRAM_FLAGS) $(LDAP_FLAGS)
-CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" /I "..\common" $(EXTRA_FLAGS) /D "WIN32" /D "_WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
+CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" /I "..\common" $(EXTRA_FLAGS) /D "_WIN32" $(COMMON_CPPFLAGS)
 
 OPENSSL_LIBS=/libpath:$(OPENSSL_LIBPATH) libeay32.lib ssleay32.lib
 
diff --git a/sample/NTMakefile b/sample/NTMakefile
index 9d9d6b3d..7d1e2dce 100644
--- a/sample/NTMakefile
+++ b/sample/NTMakefile
@@ -19,7 +19,7 @@ all_objs = $(common_objs) $(server_objs) $(client_objs) $(sample_client_objs) $(
 all_out = $(sample_apps) $(sample_out)
 
 DB_FLAGS = /I $(DB_INCLUDE)
-CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" $(DB_FLAGS) /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
+CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" $(DB_FLAGS) $(COMMON_CPPFLAGS)
 CPPFLAGS = $(CPPFLAGS) /DNEED_GETOPT
 
 !IF $(TARGET_WIN_SYSTEM) >= 51
diff --git a/utils/NTMakefile b/utils/NTMakefile
index ebd65441..43a3707c 100644
--- a/utils/NTMakefile
+++ b/utils/NTMakefile
@@ -12,7 +12,7 @@ all_objs = $(saslpwd_objs) $(sasldblistusers_objs) $(testsuite_objs) $(pluginvie
 all_out = $(sasl_apps) $(sasl_out)
 
 DB_FLAGS = /I $(DB_INCLUDE) /I "..\sasldb"
-CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" $(DB_FLAGS) /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
+CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" $(DB_FLAGS) $(COMMON_CPPFLAGS)
 CPPFLAGS = $(CPPFLAGS) /DNEED_GETOPT
 
 
diff --git a/win32/common.mak b/win32/common.mak
index 194dfe95..0ac36f3c 100644
--- a/win32/common.mak
+++ b/win32/common.mak
@@ -27,6 +27,7 @@ LINK32EXE=$(LINK32)
 LINK32LIB=link.exe /lib /nologo
 
 SYS_LIBS=ws2_32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib
+COMMON_CPPFLAGS=/D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
 
 !IF "$(BITS)" == "64"
 SYS_LIBS=$(SYS_LIBS) bufferoverflowU.lib

From 6dfc306ec7bc5395b757dd23c16740df1ebda7aa Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:39:08 +0300
Subject: [PATCH 07/16] windows build: fix errors related to static plugins

Windows NTMakeFile build was broken in commit that added support for
static plugins in Visual Studio build:
  fbbcd446 by Ri0n, 2018-03-31 13:46:52
  Added more plugins to visual studio project. refined options

Before that commit, 'staticopen.h' wasn't even included into
'lib/windlopen.c', so all 'STATIC_' options were ignored.

The solution is to disable 'STATIC_' in 'NTMakeFile' build only.
Visual Studio build is not affected, because it doesn't define
'NO_STATIC_PLUGINS'.

This fixes errors like:
----
windlopen.obj : error LNK2001: unresolved external symbol anonymous_server_plug_init
windlopen.obj : error LNK2001: unresolved external symbol anonymous_client_plug_init
windlopen.obj : error LNK2001: unresolved external symbol digestmd5_server_plug_init
windlopen.obj : error LNK2001: unresolved external symbol digestmd5_client_plug_init
windlopen.obj : error LNK2001: unresolved external symbol scram_server_plug_init
windlopen.obj : error LNK2001: unresolved external symbol scram_client_plug_init
windlopen.obj : error LNK2001: unresolved external symbol ntlm_server_plug_init
windlopen.obj : error LNK2001: unresolved external symbol ntlm_client_plug_init
windlopen.obj : error LNK2001: unresolved external symbol plain_server_plug_init
windlopen.obj : error LNK2001: unresolved external symbol plain_client_plug_init
libsasl.dll : fatal error LNK1120: 10 unresolved externals
----

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 win32/common.mak       | 3 +++
 win32/include/config.h | 3 +++
 2 files changed, 6 insertions(+)

diff --git a/win32/common.mak b/win32/common.mak
index 0ac36f3c..068c6a94 100644
--- a/win32/common.mak
+++ b/win32/common.mak
@@ -29,6 +29,9 @@ LINK32LIB=link.exe /lib /nologo
 SYS_LIBS=ws2_32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib
 COMMON_CPPFLAGS=/D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
 
+# Disable all static plugins (this is not supported yet)
+COMMON_CPPFLAGS = $(COMMON_CPPFLAGS) /D "NO_STATIC_PLUGINS"
+
 !IF "$(BITS)" == "64"
 SYS_LIBS=$(SYS_LIBS) bufferoverflowU.lib
 !ENDIF
diff --git a/win32/include/config.h b/win32/include/config.h
index 183560fb..a845c561 100755
--- a/win32/include/config.h
+++ b/win32/include/config.h
@@ -92,6 +92,8 @@ typedef int		    intptr_t;
 /* #undef SASL_NDBM */
 #define SASL_BERKELEYDB 1
 
+/* static plugins are not yet compatible with building via NTMakeFile */
+#ifndef NO_STATIC_PLUGINS
 /* which mechs can we link statically? */
 #define STATIC_ANONYMOUS 1
 /* #define STATIC_CRAMMD5 1 */
@@ -106,6 +108,7 @@ typedef int		    intptr_t;
 /* #define STATIC_SASLDB 1 */
 #define STATIC_SCRAM 1
 /* #define STATIC_SRP 1 */
+#endif
 
 /* ------------------------------------------------------------ */
 

From a2cb87985eadfbd93fdc82468d1ef70fff543d9c Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:39:24 +0300
Subject: [PATCH 08/16] windows build: fix errors related to 'GCC_FALLTHROUGH'

Between 2.1.26 and 2.1.27, 'GCC_FALLTHROUGH' was defined and used in
various places. Define it to nothing in 'NTMakeFile' build, similar to
what Visual Studio build is already doing.

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 win32/common.mak | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/win32/common.mak b/win32/common.mak
index 068c6a94..3843781a 100644
--- a/win32/common.mak
+++ b/win32/common.mak
@@ -27,7 +27,7 @@ LINK32EXE=$(LINK32)
 LINK32LIB=link.exe /lib /nologo
 
 SYS_LIBS=ws2_32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib
-COMMON_CPPFLAGS=/D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL"
+COMMON_CPPFLAGS=/D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "GCC_FALLTHROUGH="
 
 # Disable all static plugins (this is not supported yet)
 COMMON_CPPFLAGS = $(COMMON_CPPFLAGS) /D "NO_STATIC_PLUGINS"

From e92ecd611783fec1ef7313dfd3e2d6443a949ddf Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:39:38 +0300
Subject: [PATCH 09/16] windows build: fix errors when build path has spaces

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 NTMakefile               |  2 +-
 doc/legacy/NTMakefile    | 10 +++++-----
 include/NTMakefile       |  4 ++--
 lib/NTMakefile           |  4 ++--
 plugins/NTMakefile       | 24 ++++++++++++------------
 sample/NTMakefile        |  4 ++--
 sasldb/NTMakefile        |  4 ++--
 utils/NTMakefile         |  6 +++---
 win32/common.mak         | 12 ++++++------
 win32/include/NTMakefile |  4 ++--
 10 files changed, 37 insertions(+), 37 deletions(-)

diff --git a/NTMakefile b/NTMakefile
index d3aac8a0..507c5931 100644
--- a/NTMakefile
+++ b/NTMakefile
@@ -56,5 +56,5 @@ all clean: $(SUBDIRS)
 	!cd $? && $(MAKE) /f NTMakefile /$(MAKEFLAGS) VERBOSE=0 $@
 
 install: $(INCSUBDIRS) $(SUBDIRS) $(DOCSUBDIRS)
-	!cd $? && $(MAKE) /f NTMakefile /$(MAKEFLAGS) prefix=$(prefix) $@
+	!cd $? && $(MAKE) /f NTMakefile /$(MAKEFLAGS) "prefix=$(prefix)" $@
 
diff --git a/doc/legacy/NTMakefile b/doc/legacy/NTMakefile
index 6c0f8484..ab809000 100644
--- a/doc/legacy/NTMakefile
+++ b/doc/legacy/NTMakefile
@@ -15,11 +15,11 @@ all: all-recursive
 # instead of libsasl.lib. Ugly, but works!
 #
 install:
-	@xcopy *.txt $(docdir) /I /F /Y
-	@xcopy *.fig $(docdir) /I /F /Y
-	@xcopy *.html $(docdir) /I /F /Y
-	@xcopy TODO $(docdir) /I /F /Y
-	@xcopy ONEWS $(docdir) /I /F /Y
+	@xcopy *.txt "$(docdir)" /I /F /Y
+	@xcopy *.fig "$(docdir)" /I /F /Y
+	@xcopy *.html "$(docdir)" /I /F /Y
+	@xcopy TODO "$(docdir)" /I /F /Y
+	@xcopy ONEWS "$(docdir)" /I /F /Y
 
 all-recursive:
 	@echo Nothing to build for target all
diff --git a/include/NTMakefile b/include/NTMakefile
index 0c068eee..9cd49ef8 100644
--- a/include/NTMakefile
+++ b/include/NTMakefile
@@ -61,5 +61,5 @@ all:
 # /I flag to xcopy tells to treat the last parameter as directory and create all missing levels
 #
 install: $(saslinclude_HEADERS)
-	!xcopy sasl*.h $(saslincludedir) /I /F /Y
-	!xcopy $? $(saslincludedir) /I /F /Y
+	!xcopy sasl*.h "$(saslincludedir)" /I /F /Y
+	!xcopy $? "$(saslincludedir)" /I /F /Y
diff --git a/lib/NTMakefile b/lib/NTMakefile
index 3eb2688c..cbb516b4 100755
--- a/lib/NTMakefile
+++ b/lib/NTMakefile
@@ -40,8 +40,8 @@ install: libsasl.dll
 	@echo libsasl.dll.manifest >> $(exclude_list)
 # .lib is excluded only because it is copied separately below
 	@echo libsasl.lib >> $(exclude_list)
-	@xcopy libsasl.* $(bindir) /I /F /Y /EXCLUDE:$(exclude_list)
-	@xcopy libsasl.l* $(libdir) /I /F /Y
+	@xcopy libsasl.* "$(bindir)" /I /F /Y /EXCLUDE:$(exclude_list)
+	@xcopy libsasl.l* "$(libdir)" /I /F /Y
 
 all-recursive: libsasl.dll
 
diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index cbe20409..7c3959f8 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -34,12 +34,12 @@ LDAP_LIBS = $(LDAP_LIB_BASE)\olber32.lib $(LDAP_LIB_BASE)\oldap32.lib ..\lib\lib
 !IF "$(SQL)" == "SQLITE"
 PLUGINS_EXT=$(PLUGINS_EXT) saslSQLITE.dll
 SQL_FLAGS= $(SQLITE_INCLUDES) /DHAVE_SQLITE=1
-SQLITE_LIBS = /libpath:$(SQLITE_LIBPATH) libsqlite.lib
+SQLITE_LIBS = "/libpath:$(SQLITE_LIBPATH)" libsqlite.lib
 !ENDIF
 !IF "$(SQL)" == "SQLITE3"
 PLUGINS_EXT=$(PLUGINS_EXT) saslSQLITE.dll
 SQL_FLAGS= $(SQLITE_INCLUDES3) /DHAVE_SQLITE3=1
-SQLITE_LIBS = /libpath:$(SQLITE_LIBPATH3) libsqlite3.lib
+SQLITE_LIBS = "/libpath:$(SQLITE_LIBPATH3)" libsqlite3.lib
 !ENDIF
 
 PLUGINS=saslANONYMOUS.dll \
@@ -100,7 +100,7 @@ saslLDAPDB_objs = ldapdb.obj $(common_objs)
 saslLDAPDB_out = saslLDAPDB.dll saslLDAPDB.exp saslLDAPDB.lib
 
 !IF "$(NTLM)" == "1" || "$(SRP)" == "1" || "$(OTP)" == "1" || "$(SCRAM)" == "1"
-OPENSSL_FLAGS= /I $(OPENSSL_INCLUDE)
+OPENSSL_FLAGS= /I "$(OPENSSL_INCLUDE)"
 !ELSE 
 OPENSSL_FLAGS=
 !ENDIF 
@@ -114,23 +114,23 @@ GSSAPILIB=gssapi32.lib
 !ENDIF
 
 !IF "$(GSSAPI)" == "CyberSafe"
-GSS_FLAGS= /I $(GSSAPI_INCLUDE) /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
-GSS_LIBS=/libpath:$(GSSAPI_LIBPATH) $(GSSAPILIB)
+GSS_FLAGS= /I "$(GSSAPI_INCLUDE)" /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
+GSS_LIBS="/libpath:$(GSSAPI_LIBPATH)" $(GSSAPILIB)
 !ELSE IF "$(GSSAPI)" == "MITKerberos"
-GSS_FLAGS= /I $(GSSAPI_INCLUDE) /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
-GSS_LIBS=/libpath:$(GSSAPI_LIBPATH) $(GSSAPILIB)
+GSS_FLAGS= /I "$(GSSAPI_INCLUDE)" /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
+GSS_LIBS="/libpath:$(GSSAPI_LIBPATH)" $(GSSAPILIB)
 !ELSE 
 GSS_FLAGS=
 GSS_LIBS=
 !ENDIF
 
 !IF "$(SASLDB)" == "LMDB"
-DB_LIBS=/libpath:$(LMDB_LIBPATH) lmdb.lib
+DB_LIBS="/libpath:$(LMDB_LIBPATH)" lmdb.lib
 
 # Auxprop Plugin
 libsasldb_objs = allockey.obj db_lmdb.obj
 !ELSE
-DB_LIBS=/libpath:$(DB_LIBPATH) $(DB_LIB)
+DB_LIBS="/libpath:$(DB_LIBPATH)" "$(DB_LIB)"
 
 # Auxprop Plugin
 libsasldb_objs = allockey.obj db_berkeley.obj
@@ -149,7 +149,7 @@ all_objs = $(saslANONYMOUS_objs) $(saslPLAIN_objs) $(saslCRAMMD5_objs) $(saslDIG
 all_out = $(saslANONYMOUS_out) $(saslPLAIN_out) $(saslCRAMMD5_out) $(saslDIGESTMD5_out) $(saslLOGIN_out) $(saslSCRAM_out) $(saslNTLM_out) $(saslGSSAPI_out) $(saslSRP_out) $(saslOTP_out) $(saslSASLDB_out) $(saslSQL_out) $(saslLDAPDB_out)
 
 # LIBSASL_EXPORTS is required to export additional DB routines from sasldb
-DB_FLAGS = /I $(DB_INCLUDE) /I "..\sasldb" /D "LIBSASL_EXPORTS" /D "KEEP_DB_OPEN"
+DB_FLAGS = /I "$(DB_INCLUDE)" /I "..\sasldb" /D "LIBSASL_EXPORTS" /D "KEEP_DB_OPEN"
 
 !IF $(TARGET_WIN_SYSTEM) >= 51
 EXTRA_FLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(EXTRA_FLAGS)
@@ -158,7 +158,7 @@ EXTRA_FLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(EXTRA_FLAGS)
 EXTRA_FLAGS=$(EXTRA_FLAGS) $(DB_FLAGS) $(OPENSSL_FLAGS) $(GSS_FLAGS) $(SRP_FLAGS) $(SQL_FLAGS) $(DIGEST_FLAGS) $(CRAM_FLAGS) $(SCRAM_FLAGS) $(LDAP_FLAGS)
 CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" /I "..\common" $(EXTRA_FLAGS) /D "_WIN32" $(COMMON_CPPFLAGS)
 
-OPENSSL_LIBS=/libpath:$(OPENSSL_LIBPATH) libeay32.lib ssleay32.lib
+OPENSSL_LIBS="/libpath:$(OPENSSL_LIBPATH)" libeay32.lib ssleay32.lib
 
 # Where to install files from this directory
 libdir = $(prefix)\lib
@@ -177,7 +177,7 @@ all : all-recursive
 # us to copy GSSAPI plugin, which might not be in $(PLUGINS).
 #
 install: $(PLUGINS)
-	@xcopy *.dll $(bindir) /I /F /Y
+	@xcopy *.dll "$(bindir)" /I /F /Y
 
 all-recursive : $(PLUGINS)
 
diff --git a/sample/NTMakefile b/sample/NTMakefile
index 7d1e2dce..f97653bb 100644
--- a/sample/NTMakefile
+++ b/sample/NTMakefile
@@ -18,7 +18,7 @@ common_objs = $(common_objs) $(compat_objs)
 all_objs = $(common_objs) $(server_objs) $(client_objs) $(sample_client_objs) $(sample_server_objs)
 all_out = $(sample_apps) $(sample_out)
 
-DB_FLAGS = /I $(DB_INCLUDE)
+DB_FLAGS = /I "$(DB_INCLUDE)"
 CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" $(DB_FLAGS) $(COMMON_CPPFLAGS)
 CPPFLAGS = $(CPPFLAGS) /DNEED_GETOPT
 
@@ -47,7 +47,7 @@ all : all-recursive
 # us to copy optionally built executables, which might not be in $(sample_apps). The latter is a feature.
 #
 install: $(sample_apps)
-	@xcopy *.exe $(bindir) /I /F /Y
+	@xcopy *.exe "$(bindir)" /I /F /Y
 
 all-recursive : $(sample_apps)
 
diff --git a/sasldb/NTMakefile b/sasldb/NTMakefile
index e3919e60..743a01ab 100644
--- a/sasldb/NTMakefile
+++ b/sasldb/NTMakefile
@@ -61,5 +61,5 @@ all:
 # /I flag to xcopy tells to treat the last parameter as directory and create all missing levels
 #
 install: $(saslinclude_HEADERS)
-	!xcopy sasldb*.h $(saslincludedir) /I /F /Y
-	!xcopy $? $(saslincludedir) /I /F /Y
+	!xcopy sasldb*.h "$(saslincludedir)" /I /F /Y
+	!xcopy $? "$(saslincludedir)" /I /F /Y
diff --git a/utils/NTMakefile b/utils/NTMakefile
index 43a3707c..831226e5 100644
--- a/utils/NTMakefile
+++ b/utils/NTMakefile
@@ -11,12 +11,12 @@ pluginviewer_objs = pluginviewer.obj
 all_objs = $(saslpwd_objs) $(sasldblistusers_objs) $(testsuite_objs) $(pluginviewer_objs)
 all_out = $(sasl_apps) $(sasl_out)
 
-DB_FLAGS = /I $(DB_INCLUDE) /I "..\sasldb"
+DB_FLAGS = /I "$(DB_INCLUDE)" /I "..\sasldb"
 CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" $(DB_FLAGS) $(COMMON_CPPFLAGS)
 CPPFLAGS = $(CPPFLAGS) /DNEED_GETOPT
 
 
-DB_LIBS=/libpath:$(DB_LIBPATH) $(DB_LIB)
+DB_LIBS="/libpath:$(DB_LIBPATH)" "$(DB_LIB)"
 SASL_LIB=/libpath:"..\lib" libsasl.lib
 SASL_DB_LIB=/libpath:"..\plugins" saslSASLDB.lib
 
@@ -40,7 +40,7 @@ all : all-recursive
 # us to copy optionally built executables, which might not be in $(sasl_apps). The latter is a feature.
 #
 install: $(sasl_apps)
-	@xcopy *.exe $(bindir) /I /F /Y
+	@xcopy *.exe "$(bindir)" /I /F /Y
 
 all-recursive : $(sasl_apps)
 
diff --git a/win32/common.mak b/win32/common.mak
index 3843781a..d48f2d57 100644
--- a/win32/common.mak
+++ b/win32/common.mak
@@ -98,28 +98,28 @@ LMDB_LIBPATH=c:\work\isode\lmdb\libraries\liblmdb\Release
 !ENDIF
 
 !IF "$(OPENSSL_INCLUDE)" == ""
-OPENSSL_INCLUDE="D:\openssl\engine-0.9.6g-md3\include"
+OPENSSL_INCLUDE=D:\openssl\engine-0.9.6g-md3\include
 !IF "$(VERBOSE)" != "0"
 !MESSAGE Defaulting OpenSSL Include path to $(OPENSSL_INCLUDE).
 !ENDIF
 !ENDIF
 
 !IF "$(OPENSSL_LIBPATH)" == ""
-OPENSSL_LIBPATH="D:\openssl\engine-0.9.6g-md3\lib"
+OPENSSL_LIBPATH=D:\openssl\engine-0.9.6g-md3\lib
 !IF "$(VERBOSE)" != "0"
 !MESSAGE Defaulting OpenSSL library path to $(OPENSSL_LIBPATH).
 !ENDIF
 !ENDIF
 
 !IF "$(GSSAPI_INCLUDE)" == ""
-GSSAPI_INCLUDE="C:\Program Files\CyberSafe\Developer Pack\ApplicationSecuritySDK\include"
+GSSAPI_INCLUDE=C:\Program Files\CyberSafe\Developer Pack\ApplicationSecuritySDK\include
 !IF "$(VERBOSE)" != "0"
 !MESSAGE Defaulting GSSAPI Include path to $(GSSAPI_INCLUDE).
 !ENDIF
 !ENDIF
 
 !IF "$(GSSAPI_LIBPATH)" == ""
-GSSAPI_LIBPATH="C:\Program Files\CyberSafe\Developer Pack\ApplicationSecuritySDK\lib"
+GSSAPI_LIBPATH=C:\Program Files\CyberSafe\Developer Pack\ApplicationSecuritySDK\lib
 !IF "$(VERBOSE)" != "0"
 !MESSAGE Defaulting GSSAPI library path to $(GSSAPI_LIBPATH).
 !ENDIF
@@ -133,7 +133,7 @@ SQLITE_INCLUDES=/I"C:\work\open_source\sqllite\sqlite\src" /I"C:\work\open_sourc
 !ENDIF
 
 !IF "$(SQLITE_LIBPATH)" == ""
-SQLITE_LIBPATH="C:\work\open_source\sqllite\sqlite\objs"
+SQLITE_LIBPATH=C:\work\open_source\sqllite\sqlite\objs
 !IF "$(VERBOSE)" != "0"
 !MESSAGE Defaulting SQLITE library path to $(SQLITE_LIBPATH).
 !ENDIF
@@ -147,7 +147,7 @@ SQLITE_INCLUDES3=/I"c:\work\sqlite\generated"
 !ENDIF
 
 !IF "$(SQLITE_LIBPATH3)" == ""
-SQLITE_LIBPATH3="c:\work\sqlite\objs.NT"
+SQLITE_LIBPATH3=c:\work\sqlite\objs.NT
 !IF "$(VERBOSE)" != "0"
 !MESSAGE Defaulting SQLITE library path to $(SQLITE_LIBPATH3).
 !ENDIF
diff --git a/win32/include/NTMakefile b/win32/include/NTMakefile
index 21bb47e8..941494e7 100644
--- a/win32/include/NTMakefile
+++ b/win32/include/NTMakefile
@@ -61,5 +61,5 @@ all:
 # /I flag to xcopy tells to treat the last parameter as directory and create all missing levels
 #
 install: $(saslinclude_HEADERS)
-	!xcopy md5global*.h $(saslincludedir) /I /F /Y
-	!xcopy $? $(saslincludedir) /I /F /Y
+	!xcopy md5global*.h "$(saslincludedir)" /I /F /Y
+	!xcopy $? "$(saslincludedir)" /I /F /Y

From 30f4e92e532cf3fda417b6c7511e891a7a2ae781 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:40:00 +0300
Subject: [PATCH 10/16] windows build: auto-detect OpenSSL 1.1

In OpenSSL 1.1, the library names were changed:
libeay32.dll -> libcrypto.dll
ssleay32.dll -> libssl.dll

While at it, also remove 'libssl.dll' from dependencies because it's
not used.

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 plugins/NTMakefile | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index 7c3959f8..4755ad1a 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -158,7 +158,18 @@ EXTRA_FLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(EXTRA_FLAGS)
 EXTRA_FLAGS=$(EXTRA_FLAGS) $(DB_FLAGS) $(OPENSSL_FLAGS) $(GSS_FLAGS) $(SRP_FLAGS) $(SQL_FLAGS) $(DIGEST_FLAGS) $(CRAM_FLAGS) $(SCRAM_FLAGS) $(LDAP_FLAGS)
 CPPFLAGS = /I "..\win32\include" /I "." /I "..\include" /I "..\common" $(EXTRA_FLAGS) /D "_WIN32" $(COMMON_CPPFLAGS)
 
-OPENSSL_LIBS="/libpath:$(OPENSSL_LIBPATH)" libeay32.lib ssleay32.lib
+OPENSSL_LIBS="/libpath:$(OPENSSL_LIBPATH)"
+!IF      EXISTS($(OPENSSL_LIBPATH)\libcrypto.lib)
+# OpenSSL >= 1.1
+OPENSSL_LIBS=$(OPENSSL_LIBS) libcrypto.lib
+!ELSE IF EXISTS($(OPENSSL_LIBPATH)\libeay32.lib)
+# OpenSSL <= 1.0
+OPENSSL_LIBS=$(OPENSSL_LIBS) libeay32.lib
+!ELSE
+# Don't error out because during 'nmake install', variable 'OPENSSL_LIBS'
+# can be missing but it's not used anyway.
+OPENSSL_LIBS=$(OPENSSL_LIBS) failed_to_identify_openssl.lib
+!ENDIF
 
 # Where to install files from this directory
 libdir = $(prefix)\lib

From 8feb0c3d3c1d2fb84d161a61dcfff7463c16a449 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:40:13 +0300
Subject: [PATCH 11/16] windows build: fix errors related to 'gssapi.h'

This commit changed how 'gssapi.h' is located:
  867d70cb by Ken Murchison, 2017-07-13 22:15:12
  Fixed issue #326: sasl2.m4 has broken gssapi logic (patch from Jan Parcel)

Fix Windows build files to follow.
While at it, also use 'gssapi/gssapi_krb5.h' because it's present.

This fixes errors like:
gssapi.c(95) : error C2061: syntax error : identifier 'gss_spnego_oid'

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 plugins/NTMakefile | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index 4755ad1a..1845d65d 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -114,10 +114,10 @@ GSSAPILIB=gssapi32.lib
 !ENDIF
 
 !IF "$(GSSAPI)" == "CyberSafe"
-GSS_FLAGS= /I "$(GSSAPI_INCLUDE)" /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
+GSS_FLAGS= /I "$(GSSAPI_INCLUDE)" /D "HAVE_GSSAPI_GSSAPI_H" /D "HAVE_GSSAPI_GSSAPI_KRB5_H" /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
 GSS_LIBS="/libpath:$(GSSAPI_LIBPATH)" $(GSSAPILIB)
 !ELSE IF "$(GSSAPI)" == "MITKerberos"
-GSS_FLAGS= /I "$(GSSAPI_INCLUDE)" /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
+GSS_FLAGS= /I "$(GSSAPI_INCLUDE)" /D "HAVE_GSSAPI_GSSAPI_H" /D "HAVE_GSSAPI_GSSAPI_KRB5_H" /D "HAVE_GSS_C_NT_HOSTBASED_SERVICE" /D "HAVE_GSS_C_NT_USER_NAME"
 GSS_LIBS="/libpath:$(GSSAPI_LIBPATH)" $(GSSAPILIB)
 !ELSE 
 GSS_FLAGS=

From 5ca60d55c89cd6e8df256648423ac5639949592a Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:40:24 +0300
Subject: [PATCH 12/16] windows build: disable docs for now

This commit replaced docs with new ones:
  bb12da07 by ellie timoney, 2016-12-13 02:32:18
  move static html docs to doc/legacy

I wasn't able to quickly figure how to install new docs.
Let's just disable docs for now so that at least other thing can build.

This fixes errors like:
fatal error U1052: file 'NTMakefile' not found

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 NTMakefile | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/NTMakefile b/NTMakefile
index 507c5931..cdc4cac2 100644
--- a/NTMakefile
+++ b/NTMakefile
@@ -46,7 +46,8 @@
 
 SUBDIRS=lib plugins utils sample
 INCSUBDIRS=include sasldb win32\include
-DOCSUBDIRS=doc
+# TODO: Support installing new docs
+DOCSUBDIRS=
 
 all-first: all
 

From d052cc5d6190e33d367d73ab615f1186e944ab1c Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:40:37 +0300
Subject: [PATCH 13/16] windows build: fix 'md5global.h' include path

Published 2.1.27 has two of these:
include/md5global.h
win32/include/md5global.h

With old search path, 'include/md5global.h' was selected, but it's
the non-Windows version of the file. The difference is that 'long' is
8 bytes on Linux-x64 and 4 bytes on Windows-x64.

This fixes errors like
md5global.h(21) : error C2371: 'INT8' : redefinition; different basic types

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 include/saslplug.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/include/saslplug.h b/include/saslplug.h
index ab79e68c..8c49b056 100755
--- a/include/saslplug.h
+++ b/include/saslplug.h
@@ -5,7 +5,7 @@
 #define SASLPLUG_H 1
 
 #ifndef MD5GLOBAL_H
-#include "md5global.h"
+#include <md5global.h>
 #endif
 #ifndef MD5_H
 #include "md5.h"

From c22b723b631a64603e91be385875a319bb41411e Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 02:40:53 +0300
Subject: [PATCH 14/16] windows build: remove the deprecated /Wp64 option

The options was there to detect 64-bit portability issues, which I
expect are fixed long ago. The option is not supported since
Visual Studio 2013 and causes noise in build output, let's just remove
it.

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 lib/NTMakefile   | 2 +-
 win32/common.mak | 6 +-----
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/lib/NTMakefile b/lib/NTMakefile
index cbb516b4..63a54bd8 100755
--- a/lib/NTMakefile
+++ b/lib/NTMakefile
@@ -12,7 +12,7 @@ libsasl_objs = auxprop.obj canonusr.obj checkpw.obj client.obj common.obj config
 libsasl_res = libsasl.res
 libsasl_out = libsasl.dll libsasl.exp libsasl.lib $(libsasl_res)
 
-CPPFLAGS = /wd4996 /Wp64 /D NEED_GETOPT /I "..\win32\include" /I "." /I "..\include" /D "LIBSASL_EXPORTS" $(COMMON_CPPFLAGS)
+CPPFLAGS = /wd4996 /D NEED_GETOPT /I "..\win32\include" /I "." /I "..\include" /D "LIBSASL_EXPORTS" $(COMMON_CPPFLAGS)
 
 !IF $(TARGET_WIN_SYSTEM) >= 51
 CPPFLAGS = /D TARGET_WIN_SYSTEM=$(TARGET_WIN_SYSTEM) $(CPPFLAGS)
diff --git a/win32/common.mak b/win32/common.mak
index d48f2d57..7f478cd3 100644
--- a/win32/common.mak
+++ b/win32/common.mak
@@ -187,11 +187,7 @@ CODEGEN=/MD
 !ENDIF 
 !ENDIF 
 
-!IF "$(VCVER)" != "6"
-ENABLE_WIN64_WARNINGS=/Wp64
-!ENDIF
-
-CPP_PROJ= $(CODEGEN) /W3 $(EXCEPTHANDLING) /O2 $(ENABLE_WIN64_WARNINGS) /Zi /D "NDEBUG" /D _CRT_SECURE_NO_DEPRECATE=1 $(CPPFLAGS) /FD /c
+CPP_PROJ= $(CODEGEN) /W3 $(EXCEPTHANDLING) /O2 /Zi /D "NDEBUG" /D _CRT_SECURE_NO_DEPRECATE=1 $(CPPFLAGS) /FD /c
 
 incremental=no
 

From 9fba65a6b704f6b6af6a6c684084de515ab8ea27 Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 03:19:45 +0200
Subject: [PATCH 15/16] windows build: use OpenSSL in digestmd5

This fixes errors like:
----
digestmd5.obj : error LNK2019: unresolved external symbol EVP_EncryptInit_ex referenced in function init_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_EncryptUpdate referenced in function enc_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_EncryptFinal_ex referenced in function enc_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_DecryptInit_ex referenced in function init_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_DecryptUpdate referenced in function dec_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_DecryptFinal_ex referenced in function dec_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_CIPHER_CTX_new referenced in function init_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_CIPHER_CTX_free referenced in function free_rc4
digestmd5.obj : error LNK2019: unresolved external symbol EVP_rc4 referenced in function init_rc4

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 plugins/NTMakefile | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/plugins/NTMakefile b/plugins/NTMakefile
index 1845d65d..554e9363 100755
--- a/plugins/NTMakefile
+++ b/plugins/NTMakefile
@@ -210,7 +210,7 @@ saslCRAMMD5.dll: $(saslCRAMMD5_objs) saslCRAMMD5.res
 	IF EXIST $@.manifest mt -manifest $@.manifest -outputresource:$@;2
 
 saslDIGESTMD5.dll: $(saslDIGESTMD5_objs) saslDIGESTMD5.res
-	$(LINK32DLL) @<< $(LINK32DLL_FLAGS) /out:"saslDIGESTMD5.dll" /implib:"saslDIGESTMD5.lib" $(saslDIGESTMD5_objs) saslDIGESTMD5.res
+	$(LINK32DLL) @<< $(OPENSSL_LIBS) $(LINK32DLL_FLAGS) /out:"saslDIGESTMD5.dll" /implib:"saslDIGESTMD5.lib" $(saslDIGESTMD5_objs) saslDIGESTMD5.res
 <<
 	IF EXIST $@.manifest mt -manifest $@.manifest -outputresource:$@;2
 

From 2e91225aa9dc7ccb6633c0ed529360d06bcbec5d Mon Sep 17 00:00:00 2001
From: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
Date: Sat, 2 Oct 2021 03:24:46 +0200
Subject: [PATCH 16/16] windows build: update documentation

Signed-off-by: Alexandr Miloslavskiy <alexandr.miloslavskiy@syntevo.com>
---
 docsrc/sasl/windows.rst | 12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

diff --git a/docsrc/sasl/windows.rst b/docsrc/sasl/windows.rst
index a6800a13..c498a501 100644
--- a/docsrc/sasl/windows.rst
+++ b/docsrc/sasl/windows.rst
@@ -24,12 +24,6 @@ SleepyCat
     SleepyCat's include files and libraries are required to buil SASLDB plugin,
     saslpasswd2.exe and sasldblistusers2.exe. We have tested SleepyCat 4.1.X-4.4.X.
 
-Cygwin (for building from GIT)
-    The `Cygwin <http://www.cygwin.com/>`_ Unix-compatibility
-    environment to create the ``_init.c`` files needed for dynamic
-    loading. Cygwin is *not* required for building from our tar
-    distribution.
-
 Step by step
 ============
 
@@ -39,10 +33,10 @@ and the sources are in ``C:\SASL``.
 Preparing to build (GIT only!)
 ------------------------------
 
-Start a cygwin shell and create the dynamic loading stubs::
+Create the dynamic loading stubs::
 
-    % cd /cygdrive/c/sasl/plugins
-    % sh makeinit.sh
+    % cd win32
+    % PowerShell.exe -ExecutionPolicy Bypass -File makeinit.ps1
 
 Building using NMake
 --------------------
